/// <reference types="react" />
export declare const HOTKEYS: {
    isBold: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCompose: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isArrowLeft: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isArrowRight: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isArrowUp: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isArrowDown: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isDeleteBackward: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isDeleteForward: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isDeleteLineBackward: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isDeleteLineForward: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isDeleteWordBackward: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isDeleteWordForward: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isExtendBackward: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isExtendForward: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isExtendLineBackward: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isExtendLineForward: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isItalic: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isMoveLineBackward: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isMoveLineForward: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCtrlLeft: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCtrlRight: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isRedo: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isShiftEnter: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isEnter: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isTransposeCharacter: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isUndo: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isSpace: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isSelect: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isTab: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isShiftTab: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isBackspace: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCmdEnter: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCmd: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isEscape: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isSlashCommand: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isShiftArrowUp: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isShiftArrowDown: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCopy: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCut: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isShiftDelete: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCmdShiftEnter: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCmdShiftRight: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCmdShiftLeft: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCmdShiftDelete: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCmdAltDelete: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
    isCmdShiftD: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
};
export type HOTKEYS_TYPE = {
    [key in keyof typeof HOTKEYS]: (event: React.KeyboardEvent | KeyboardEvent) => boolean;
};
//# sourceMappingURL=hotkeys.d.ts.map